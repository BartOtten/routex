name: Elixir CI

on:
  push:
    branches: [ main, ci-test ]
  pull_request:
    branches: [ main, ci-test ]

env:
  MIX_ENV: test

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        combo:

          - otp: "26.0"
            rebar3: "3.22.1"
            os: ubuntu-24.04
            elixir: "1.17"
          - otp: "27.0"
            rebar3: "3.22.1"
            os: ubuntu-latest
            elixir: "1.18"
          - otp: "28.0"
            rebar3: latest
            os: ubuntu-latest
            elixir: "1.19"
          - otp: latest
            rebar3: latest
            os: ubuntu-latest
            elixir: latest
    runs-on: ${{ matrix.combo.os }}
    name: Build & Test (OTP ${{ matrix.combo.otp }} / Elixir ${{ matrix.combo.elixir }})
    steps:
      - uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.combo.elixir }}
          otp-version:     ${{ matrix.combo.otp }}
          rebar3-version: ${{matrix.combo.rebar3}}

      - name: Install latest tooling
        run: |
          mix archive.install --force github hexpm/hex branch latest
          wget https://s3.amazonaws.com/rebar3/rebar3 && mix local.rebar --force rebar3 ./rebar3
        if: matrix.combo.otp == 'latest' && matrix.combo.elixir == 'latest'

      - name: Install phx_new for Igniter test project (Hex)
        run: |
          mix archive.install --force hex phx_new
        if: matrix.combo.otp != 'latest'

      - name: Install phx_new for Igniter test project (Git)
        run: |
          mix archive.uninstall phx_new
          git clone https://github.com/phoenixframework/phoenix
          cd phoenix/installer
          MIX_ENV=prod mix do archive.build + archive.install --force
        if: matrix.combo.otp == 'latest' && matrix.combo.elixir == 'latest'     

      - name: Point Phoenix dependencies to GitHub
        run: |
          sed -i 's/{:phoenix, *"[^"]*"[^}]*}/{:phoenix, git: "https:\/\/github.com\/phoenixframework\/phoenix\/", override: true}/' mix.exs
          sed -i 's/{:phoenix_live_view, *"[^"]*"[^}]*}/{:phoenix_live_view, git: "https:\/\/github.com\/phoenixframework\/phoenix_live_view\/", override: true}/' mix.exs
          mix deps.unlock --all
          mix deps.get
          mix format mix.exs
        if: matrix.combo.otp == 'latest' && matrix.combo.elixir == 'latest'

      - uses: actions/cache@v3
        id: mix-cache
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-${{ matrix.combo.otp }}-${{ matrix.combo.elixir }}-${{ hashFiles('**/mix.lock') }}

      - name: Install dependencies
        run: |
          mix deps.get

      - name: Compile (check warnings)
        run: mix compile --warnings-as-errors

      - name: Check format
        if: matrix.combo.otp == 'latest' && matrix.combo.elixir == 'latest'
        run: mix format --check-formatted
      - run: mix credo --strict
      - run: mix dialyzer
      - run: mix test


      - name: Generate LCOV report
        run: mix coveralls.lcov
      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel: true
          flag-name: otp-${{ matrix.combo.otp }}-elixir-${{ matrix.combo.elixir }}
          build-number: ${{ github.run_id }}
          file: cover/lcov.info
          format: lcov

      - run: mix docs
      - uses: actions/upload-artifact@v4
        with:
          name: doc-${{ matrix.combo.otp }}-${{ matrix.combo.elixir }}
          path: doc

  coveralls_finalize:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Finalize Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
          build-number: ${{ github.run_id }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      DEPLOY_OTP:    'latest'
      DEPLOY_ELIXIR: 'latest'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: doc-${{ env.DEPLOY_OTP }}-${{ env.DEPLOY_ELIXIR }}
          path: doc
      - run: |
          cd doc
          git init --initial-branch gh-pages
          git remote add origin git@github.com:BartOtten/routex.git
          git config user.name  "Bart Otten"
          git config user.email "bart.otten85@gmail.com"
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${{ secrets.GH_PAGES_SSH }}"
          git add .
          git commit -m "mix docs"
          git push --force origin gh-pages
