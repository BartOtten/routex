name: Elixir CI

on:
  push:
    branches: [ main, ci-test ]
  pull_request:
    branches: [ main, ci-test ]

env:
  MIX_ENV: test

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [ '1.18.1', '1.18.3', 'latest' ]
        otp:    [ '25.3.1', '26.2.0', '27.3.0', '27.3.3' ]
    name: Build & Test (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }})
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up BEAM
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version:     ${{ matrix.otp }}

      - name: Cache deps & build
        uses: actions/cache@v3
        id: mix-cache
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-
            ${{ runner.os }}-${{ matrix.otp }}-
            ${{ runner.os }}-

      - name: Install Mix dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force --if-missing
          mix local.hex   --force
          mix deps.get

      - name: Compile (warnings as errors)
        run: mix compile --warnings-as-errors

      - name: Check format
        if: matrix.otp == '27.3.3' && matrix.elixir == 'latest'
        run: mix format --check-formatted

      - name: Run Credo
        run: mix credo --strict

      - name: Run Dialyzer
        run: mix dialyzer

      - name: Run tests
        run: mix test

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel: true
          flag-name: otp-${{ matrix.otp }}-elixir-${{ matrix.elixir }}
          build-number: ${{ github.run_id }}

      - name: Generate docs
        run: mix docs

      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: doc-${{ matrix.otp }}-${{ matrix.elixir }}
          path: doc

  coveralls_finalize:
    needs: build
    runs-on: ubuntu-latest
    name: Finalize Coveralls
    steps:
      - uses: actions/checkout@v4

      - name: Finalize Coveralls Build
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
          build-number: ${{ github.run_id }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy Docs
    env:
      DEPLOY_OTP:    '27.3.3'
      DEPLOY_ELIXIR: 'latest'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: doc-${{ env.DEPLOY_OTP }}-${{ env.DEPLOY_ELIXIR }}
          path: doc

      - name: Force push to gh-pages
        run: |
          cd doc
          git init --initial-branch gh-pages
          git remote add origin git@github.com:BartOtten/routex.git
          git config user.name  "Bart Otten"
          git config user.email "bart.otten85@gmail.com"
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${{ secrets.GH_PAGES_SSH }}"
          git add .
          git commit -m "mix docs"
          git push --force origin gh-pages

